
@{
    Layout = null;
}
<!DOCTYPE html>
<html ng-app="app">
<head>
    <meta charset="UTF-8">
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/JSLINQ.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/angular-animate.js"></script>
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/angular-moment.min.js"></script>
    <link href="~/Content/canvasGrid.css" rel="stylesheet" />
</head>
<body>
    <div class="container" ng-controller="canvasController">
        <div class="table-responsive" style="margin-top:40px">
            <table id="tableCanvas" class="table table-bordered">

                <tr ng-repeat="item in Model.tableRow" on-finish-render-filters>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

            </table>
            <div class="xtitle">
                <label ng-repeat="item in Model.axisXPosition" ng-style="item.style">{{item.value|amDateFormat:'YYYY-MM-DD HH:mm:ss'}}</label>

            </div>
            <div class="ytitle" ng-repeat="line in Model.nodes">
                <label ng-repeat="item in line.axisYPosition" ng-style="item.style">{{item.value|number:3}}</label>

            </div>

            <canvas id="canvas" ng-mousedown="Model.mouseKeyDown($event)" ng-mouseup="Model.mouseKeyUp($event)" ng-mousemove="Model.mouserOverEvent($event)" ng-dblclick="Model.mouseDbClick()" height="{{Model.height}}" width="{{Model.width}}" ng-style="Model.canvasStyle()"></canvas>
            <div class="canvas_div" ng-show="Model.scale.display"  ng-style="Model.scale.style()" ng-Right-Click="Model.scale.rightClick($event)">

                
            </div>
            <div class="contextmenu" ng-show="Model.scale.contextMenu" ng-style="Model.scale.menuStyle()">
                <div class="list-group">

                    <a href="#" class="list-group-item"><span class="glyphicon glyphicon-plus-sign">&nbsp;放大</span></a>
                    <a href="#" class="list-group-item"><span class="glyphicon glyphicon-minus-sign">&nbsp;还原</span></a>

                </div>
            </div>
            <div class="mousehr" ng-repeat="item in Model.splitLines">
                <hr ng-Right-Click="item.mouseRightClick($event)" ng-mouseup="item.selectMouseUp($event)" ng-mousedown="item.selectClick($event)" ng-style="item.style()" />
                <div class="contextmenu" ng-show="item.contextMenu" ng-style="item.menuStyle()">
                    <div class="list-group">

                        <a href="#" class="list-group-item" ng-click="item.remove()"><span class="glyphicon glyphicon-remove">&nbsp;删除</span></a>
                        <a href="#" class="list-group-item" ng-click="item.clear()"> <span class="glyphicon glyphicon-trash">&nbsp;清除</span></a>

                    </div>
                </div>
                <div class="popover fade right in popover_hr" role="tooltip" ng-style="item.poverStyle()">
                    <div class="arrow" style="top: 50%;"></div>
                    <h3 class="popover-title">{{item.time|amDateFormat:'YYYY-MM-DD HH:mm:ss'}}</h3>
                    <div class="popover-content" style="max-height:200px;overflow-y:auto">
                        <ul>
                            <li ng-repeat="d in item.poperNodes"> <span ng-style="d.style">{{d.value}}</span></li>
                        </ul>
                    </div>
                </div>
            </div>



        </div>

    </div>

    <script src="~/app/GridCanvas.js"></script>
    <script type="text/javascript">
       
        var app = angular.module('app', ["canvasGrid"]);
        app.controller("canvasController", function ($scope, Canvas, $timeout, $http) {
            $scope.Model = Canvas;

            $scope.$on('ngRepeatFinished', function (ngRepeatFinishedEvent) {
                Canvas.init();
                $http.post('@Url.Action("List")').success(function (data) {
                    Canvas.axixYAxix(data.length);
                    Canvas.initLineData(data);
                    Canvas.draw();
                })
            });
        });

        app.directive('ngRightClick', function ($parse) {
            return function (scope, element, attrs) {
                var fn = $parse(attrs.ngRightClick);
                element.bind('contextmenu', function (event) {
                    scope.$apply(function () {
                        event.preventDefault();
                        fn(scope, { $event: event });
                    });
                });
            };
        });
        app.directive('onFinishRenderFilters', function ($timeout) {
            return {
                restrict: 'A',
                link: function (scope, element, attr) {
                    if (scope.$last === true) {
                        $timeout(function () {
                            scope.$emit('ngRepeatFinished');
                        });
                    }
                }
            };
        });


    </script>


</body>
</html>
